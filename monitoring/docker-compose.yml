version: "3.5"

volumes:
  prometheus_data: {}
  portainer_data: {}

networks:
  cosmos-monitoring:

services:
  prometheus:
    profiles: ["monitor"]
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
       - type: volume
         source: prometheus_data
         target: /prometheus
       - type: bind
         source: ./prometheus
         target: /etc/prometheus
         read_only: true 
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - cosmos-monitoring
    restart: always

  node-exporter:
    profiles: ["node_exporter","monitor"]
    image: prom/node-exporter:latest
    container_name: node-exporter
    networks:
      - cosmos-monitoring
  
  alertmanager:
    profiles: ["monitor"]
    image: prom/alertmanager:latest
    container_name: alertmanager
    networks:
      - cosmos-monitoring
    volumes:
      - type: bind
        source: ./prometheus/alert_manager
        target: /etc/alertmanager
        read_only: true
    command: [
      '--config.file=/etc/alertmanager/alertmanager.yml',
      '--log.level=debug',
    ]
    hostname: 'alertmanager'
    restart: always
  
  alertmanager-bot:
    profiles: ["bot"]
    command:
      - '--alertmanager.url=http://URL_ALERT'
      - '--log.level=info'
      - '--store=bolt'
      - '--bolt.path=/data/bot.db'
    environment:
      TELEGRAM_ADMIN: "USER_ID"
      TELEGRAM_TOKEN: BOT_TOKEN
    image: metalmatze/alertmanager-bot:0.4.3
    networks:
      - cosmos-monitoring
    restart: always
    volumes:
      - ~/Documents/monitoring-stack/alertmanager-bot:/data

  app:
    profiles: ["proxy"]
    image: 'jc21/nginx-proxy-manager:2.9.18'
    restart: unless-stopped
    container_name: nginx-proxy-manager
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
    networks:
      - cosmos-monitoring
    volumes:
      - ~/Documents/monitoring-stack/ngm:/data
      - ~/Documents/monitoring-stack/ngm/letsencrypt:/etc/letsencrypt
      - ~/Documents/monitoring-stack/ngm/nginx/snippets:/snippets:ro

  db:
    profiles: ["proxy"]
    image: 'jc21/mariadb-aria:10.4.15'
    restart: unless-stopped
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    networks:
      - cosmos-monitoring
    volumes:
      - ~/Documents/monitoring-stack/mysql:/var/lib/mysql

  portainer:
    profiles: ["monitor"]
    image: portainer/portainer-ce
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    networks:
      - cosmos-monitoring
    ports:
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  
  portainer-agent:
    profiles: ["monitor"]
    image: portainer/agent:latest
    container_name: portainer-agent
    command: -H unix:///var/run/docker.sock
    restart: always
    networks:
      - cosmos-monitoring
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
